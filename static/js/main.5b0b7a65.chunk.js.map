{"version":3,"sources":["components/App/App.js","index.js"],"names":["FunctionBtn","player","handleResetPiece","gameResult","gameResultEl","className","onClick","ref","Board","handleChangePlayer","updateBoard","x","y","piece","pieceStyle","judge","e","App","board","Array","fill","useState","setPiece","setPlayer","setGameResult","useRef","useCallback","newValue","map","row","currentY","col","currentX","win","i","current","classList","remove","add","MemoBoard","memo","array","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b0b7a65.chunk.js","sourcesContent":["import React, { useState, memo, useCallback, useRef } from \"react\";\nimport \"./App.css\";\n\nfunction FunctionBtn({ player, handleResetPiece, gameResult, gameResultEl }) {\n  return (\n    <div className=\"top-bar\">\n      <div className=\"function-btn\">\n        <h2>下一位：{player === \"black\" ? \"黑子\" : \"白子\"}</h2>\n        {/* <div className=\"step-btn\">\n          <span className=\"btn last-btn\">上一步</span>\n          <span className=\"btn next-btn\">下一步</span>\n        </div> */}\n        <div\n          className=\"btn restart-btn\"\n          onClick={() => {\n            handleResetPiece();\n          }}\n        >\n          重新一局\n        </div>\n      </div>\n      <h1 ref={gameResultEl} className=\"hidden game-result\">\n        Winner is: {gameResult} Player\n      </h1>\n    </div>\n  );\n}\n\nfunction Board({\n  handleChangePlayer,\n  updateBoard,\n  player,\n  x,\n  y,\n  piece,\n  pieceStyle,\n  judge,\n  gameResult,\n}) {\n  return (\n    <div\n      onClick={(e) => {\n        if (gameResult == \"\") {\n          if (pieceStyle == \"\") {\n            handleChangePlayer();\n            updateBoard(x, y, player);\n            // console.log(nowContent)\n          }\n          judge(player, piece, x, y);\n        }\n      }}\n      className={`piece ${pieceStyle}`}\n      x={x}\n      y={y}\n    ></div>\n  );\n}\n\nfunction App() {\n  const board = Array(18).fill(Array(18).fill(\"\"));\n  const [piece, setPiece] = useState(Array(19).fill(Array(19).fill(\"\")));\n  const [player, setPlayer] = useState(\"black\");\n  const [gameResult, setGameResult] = useState(\"\");\n  const gameResultEl = useRef(null);\n\n  const handleChangePlayer = useCallback(() => {\n    setPlayer(player === \"black\" ? \"white\" : \"black\");\n  }, [player]);\n\n  const updateBoard = useCallback(\n    (x, y, newValue) => {\n      setPiece(\n        piece.map((row, currentY) => {\n          // 如果這一個橫排不是我要改的，直接回傳即可\n          if (currentY !== y) return row;\n          // 如果是的話，找到我要改的那個 x 的位置\n          return row.map((col, currentX) => {\n            if (currentX !== x) return col;\n            return newValue;\n          });\n        })\n      );\n    },\n    [piece]\n  );\n  // 判斷勝法 ---------------------------------------------------------------------------\n\n  const judge = useCallback(\n    (player, piece, x, y) => {\n      // 橫線贏法\n      let win = 0;\n      for (let i = 1; i < 6; i++) {\n        if (x + i > 18) {\n          break;\n        }\n        if (piece[y][x + i] === player) {\n          win++;\n          if (win >= 4) {\n            gameResultEl.current.classList.remove(\"hidden\");\n            setGameResult(player);\n            win = 0;\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n      for (let i = 1; i < 6; i++) {\n        if (x - i < 0) {\n          break;\n        }\n        if (piece[y][x - i] === player) {\n          win++;\n          if (win >= 4) {\n            gameResultEl.current.classList.remove(\"hidden\");\n            setGameResult(player);\n            win = 0;\n            break;\n          }\n        } else {\n          win = 0;\n          break;\n        }\n      }\n\n      // 豎線贏法\n\n      for (let i = 1; i < 6; i++) {\n        if (y + i > 18) {\n          break;\n        }\n        if (piece[y + i][x] === player) {\n          win++;\n          if (win >= 4) {\n            gameResultEl.current.classList.remove(\"hidden\");\n            setGameResult(player);\n            win = 0;\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n      for (let i = 1; i < 6; i++) {\n        if (y - i < 0) {\n          break;\n        }\n        if (piece[y - i][x] === player) {\n          win++;\n          if (win >= 4) {\n            gameResultEl.current.classList.remove(\"hidden\");\n            setGameResult(player);\n            win = 0;\n            break;\n          }\n        } else {\n          win = 0;\n          break;\n        }\n      }\n\n      // 正斜線贏法\n\n      for (let i = 1; i < 6; i++) {\n        if (x + i > 18 || y - i < 0) {\n          break;\n        }\n        if (piece[y - i][x + i] === player) {\n          win++;\n          if (win >= 4) {\n            gameResultEl.current.classList.remove(\"hidden\");\n            setGameResult(player);\n            win = 0;\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n      for (let i = 1; i < 6; i++) {\n        if (y + i > 18 || x - i < 0) {\n          break;\n        }\n        if (piece[y + i][x - i] === player) {\n          win++;\n          if (win >= 4) {\n            gameResultEl.current.classList.remove(\"hidden\");\n            setGameResult(player);\n            win = 0;\n            break;\n          }\n        } else {\n          win = 0;\n          break;\n        }\n      }\n      // 反斜線贏法\n\n      for (let i = 1; i < 6; i++) {\n        if (x - i < 0 || y - i < 0) {\n          break;\n        }\n        if (piece[y - i][x - i] === player) {\n          win++;\n          if (win >= 4) {\n            gameResultEl.current.classList.remove(\"hidden\");\n            setGameResult(player);\n            win = 0;\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n      for (let i = 1; i < 6; i++) {\n        if (y + i > 18 || x + i > 18) {\n          break;\n        }\n        if (piece[y + i][x + i] === player) {\n          win++;\n          if (win >= 4) {\n            gameResultEl.current.classList.remove(\"hidden\");\n            setGameResult(player);\n            win = 0;\n            break;\n          }\n        } else {\n          win = 0;\n          break;\n        }\n      }\n    },\n    [player, piece]\n  );\n\n  // -----------------------------------------------------------------------------------\n\n  const handleResetPiece = useCallback(() => {\n    setPiece(Array(19).fill(Array(19).fill(\"\")));\n    gameResultEl.current.classList.add(\"hidden\");\n    setGameResult(\"\");\n  }, []);\n\n  const MemoBoard = memo(Board);\n\n  return (\n    <div className=\"all\">\n      <FunctionBtn\n        gameResultEl={gameResultEl}\n        player={player}\n        handleResetPiece={handleResetPiece}\n        gameResult={gameResult}\n      />\n      <div className=\"board-piece\">\n        {piece.map((array, y) =>\n          array.map((value, x) => {\n            return (\n              <MemoBoard\n                gameResult={gameResult}\n                judge={judge}\n                piece={piece}\n                pieceStyle={piece[y][x]}\n                handleChangePlayer={handleChangePlayer}\n                updateBoard={updateBoard}\n                player={player}\n                x={x}\n                y={y}\n              />\n            );\n          })\n        )}\n      </div>\n\n      <div className=\"board-background\">\n        {board.map((array) => array.map(() => <MemoBoard />))}\n      </div>\n    </div>\n  );\n}\nexport default App;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./components/App/App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n"],"sourceRoot":""}